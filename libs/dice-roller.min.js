/**
 * @dice-roller/rpg-dice-roller - An advanced JS based dice roller that can roll various types of dice and modifiers, along with mathematical equations.
 * 
 * @version 5.2.1
 * @license MIT
 * @author GreenImp Media <info@greenimp.co.uk> (http://greenimp.co.uk)
 * @link https://dice-roller.github.io/documentation
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("mathjs"),require("random-js")):"function"==typeof define&&define.amd?define(["exports","mathjs","random-js"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).rpgDiceRoller={},t.math,t.Random)}(this,(function(t,e,r){"use strict";class CompareOperatorError extends TypeError{constructor(t){super(`Operator "${t}" is invalid`),TypeError.captureStackTrace&&TypeError.captureStackTrace(this,CompareOperatorError),this.name="CompareOperatorError",this.operator=t}}class DataFormatError extends Error{constructor(t){super(`Invalid data format: ${t}`),Error.captureStackTrace&&Error.captureStackTrace(this,DataFormatError),this.name="ImportError",this.data=t}}class DieActionValueError extends Error{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;super(`Die "${t}" must have more than 1 possible value to ${e||"do this action"}`),Error.captureStackTrace&&Error.captureStackTrace(this,DieActionValueError),this.name="DieActionValueError",this.action=e,this.die=t}}class NotationError extends Error{constructor(t){super(`Notation "${t}" is invalid`),Error.captureStackTrace&&Error.captureStackTrace(this,NotationError),this.name="NotationError",this.notation=t}}class RequiredArgumentError extends Error{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;super("Missing argument"+(t?` "${t}"`:"")),Error.captureStackTrace&&Error.captureStackTrace(this,RequiredArgumentError),this.argumentName=t}}var o=Object.freeze({__proto__:null,CompareOperatorError:CompareOperatorError,DataFormatError:DataFormatError,DieActionValueError:DieActionValueError,NotationError:NotationError,RequiredArgumentError:RequiredArgumentError});const i=t=>e.evaluate(t),n=t=>("number"==typeof t||"string"==typeof t)&&(!Number.isNaN(t)&&Number.isFinite(Number(t))),s=t=>{if(!n(t))return!1;const e=Number(t);return e<=Number.MAX_SAFE_INTEGER&&e>=Number.MIN_SAFE_INTEGER},a=Symbol("engine"),l=Symbol("random"),u={range:[],next(){return this.range[1]-this.range[0]}},c={next:()=>0},h={browserCrypto:r.browserCrypto,nodeCrypto:r.nodeCrypto,MersenneTwister19937:r.MersenneTwister19937,nativeMath:r.nativeMath,min:c,max:u};const p=new class NumberGenerator{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r.nativeMath;this.engine=t||r.nativeMath}get engine(){return this[a]}set engine(t){if(t&&"function"!=typeof t.next)throw new TypeError("engine must have function `next()`");this[a]=t||r.nativeMath,this[l]=new r.Random(this[a])}integer(t,e){return this[a].range=[t,e],this[l].integer(t,e)}real(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return this[a].range=[t,e],this[l].real(t,e,r)}};var f=Object.freeze({__proto__:null,engines:h,generator:p});const d=Symbol("operator"),m=Symbol("value");class ComparePoint{constructor(t,e){if(!t)throw new RequiredArgumentError("operator");if(!e&&0!==e)throw new RequiredArgumentError("value");this.operator=t,this.value=e}static isValidOperator(t){return"string"==typeof t&&/^(?:[<>!]?=|[<>]|<>)$/.test(t)}set operator(t){if(!this.constructor.isValidOperator(t))throw new CompareOperatorError(t);this[d]=t}get operator(){return this[d]}set value(t){if(!n(t))throw new TypeError("value must be a finite number");this[m]=Number(t)}get value(){return this[m]}isMatch(t){return((t,e,r)=>{const o=Number(t),i=Number(e);let n;if(Number.isNaN(o)||Number.isNaN(i))return!1;switch(r){case"=":case"==":n=o===i;break;case"<":n=o<i;break;case">":n=o>i;break;case"<=":n=o<=i;break;case">=":n=o>=i;break;case"!":case"!=":case"<>":n=o!==i;break;default:n=!1}return n})(t,this.value,this.operator)}toJSON(){const{operator:t,value:e}=this;return{operator:t,type:"compare-point",value:e}}toString(){return`${this.operator}${this.value}`}}class Modifier{constructor(){this.order=999}get name(){return"modifier"}get notation(){return""}get maxIterations(){return 1e3}run(t,e){return t}toJSON(){const{notation:t,name:e}=this;return{name:e,notation:t,type:"modifier"}}toString(){return this.notation}}const g=Symbol("compare-point");class ComparisonModifier extends Modifier{constructor(t){super(),t&&(this.comparePoint=t)}get comparePoint(){return this[g]}set comparePoint(t){if(!(t instanceof ComparePoint))throw new TypeError("comparePoint must be instance of ComparePoint");this[g]=t}get name(){return"comparison"}get notation(){return`${this.comparePoint||""}`}isComparePoint(t){return!!this.comparePoint&&this.comparePoint.isMatch(t)}toJSON(){const{comparePoint:t}=this;return Object.assign(super.toJSON(),{comparePoint:t})}}const y=Symbol("compound"),v=Symbol("penetrate");class ExplodeModifier extends ComparisonModifier{constructor(){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:null),this[y]=!!t,this[v]=!!e,this.order=3}get compound(){return this[y]}get name(){return"explode"}get notation(){return`!${this.compound?"!":""}${this.penetrate?"p":""}${super.notation}`}get penetrate(){return this[v]}run(t,e){if(e.min===e.max)throw new DieActionValueError(e,"explode");const r=t;return r.rolls=t.rolls.map((t=>{const r=[t];let o=t.value;for(let t=0;t<this.maxIterations&&this.isComparePoint(o);t++){const t=r[r.length-1],i=e.rollOnce();o=i.value,t.modifiers.add("explode"),this.penetrate&&(t.modifiers.add("penetrate"),i.value-=1),r.push(i)}return this.compound&&r.length>1?(t.value=(i=r.map((t=>t.value)),Array.isArray(i)?i.reduce(((t,e)=>t+(n(e)?parseFloat(`${e}`):0)),0):0),t.modifiers=["explode","compound"],this.penetrate&&t.modifiers.add("penetrate"),t):r;var i})).flat(),r}toJSON(){const{compound:t,penetrate:e}=this;return Object.assign(super.toJSON(),{compound:t,penetrate:e})}}const b=Symbol("text"),w=Symbol("type");class Description{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.constructor.types.INLINE;this.text=t,this.type=e}get text(){return this[b]}set text(t){if("object"==typeof t)throw new TypeError("Description text is invalid");if(!t&&0!==t||""===`${t}`.trim())throw new TypeError("Description text cannot be empty");this[b]=`${t}`.trim()}get type(){return this[w]}set type(t){const e=Object.values(this.constructor.types);if("string"!=typeof t)throw new TypeError("Description type must be a string");if(!e.includes(t))throw new RangeError(`Description type must be one of; ${e.join(", ")}`);this[w]=t}toJSON(){const{text:t,type:e}=this;return{text:t,type:e}}toString(){return this.type===this.constructor.types.INLINE?`# ${this.text}`:`[${this.text}]`}}var E,R,S;S={MULTILINE:"multiline",INLINE:"inline"},(R="types")in(E=Description)?Object.defineProperty(E,R,{value:S,enumerable:!0,configurable:!0,writable:!0}):E[R]=S;const x=Symbol("description");class HasDescription{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.description=t}get description(){return this[x]||null}set description(t){if(t||0===t)if(t instanceof Description)this[x]=t;else{if("string"!=typeof t)throw new TypeError("description must be of type Description, string or null. Received "+typeof t);this[x]=new Description(t)}else this[x]=null}toJSON(){const{description:t}=this;return{description:t}}toString(){return this.description?`${this.description}`:""}}const A={compound:"!",explode:"!","critical-failure":"__","critical-success":"**",drop:"d",max:"v",min:"^",penetrate:"p","re-roll":"r","re-roll-once":"ro","target-failure":"_","target-success":"*"},M=function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return[...e].reduce(((t,e)=>{let r;return r=e instanceof Modifier?e.name:e,t+(A[r]||r)}),"")},C=Symbol("calculation-value"),T=Symbol("modifiers"),N=Symbol("initial-value"),O=Symbol("use-in-total"),$=Symbol("value");class RollResult{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(n(t))this[N]=Number(t),this.modifiers=e||[],this.useInTotal=r;else{if(!t||"object"!=typeof t||Array.isArray(t))throw t===1/0?new RangeError("Result value must be a finite number"):new TypeError(`Result value is invalid: ${t}`);{const o=n(t.initialValue)?t.initialValue:t.value;if(!n(o))throw new TypeError(`Result value is invalid: ${o}`);this[N]=Number(o),n(t.value)&&Number(t.value)!==this[N]&&(this.value=t.value),n(t.calculationValue)&&parseFloat(`${t.calculationValue}`)!==this.value&&(this.calculationValue=t.calculationValue),this.modifiers=t.modifiers||e||[],this.useInTotal="boolean"==typeof t.useInTotal?t.useInTotal:r||!1}}}get calculationValue(){return n(this[C])?parseFloat(this[C]):this.value}set calculationValue(t){const e=n(t);if(t===1/0)throw new RangeError("Result calculation value must be a finite number");if(t&&!e)throw new TypeError(`Result calculation value is invalid: ${t}`);this[C]=e?parseFloat(`${t}`):null}get initialValue(){return this[N]}get modifierFlags(){return M(...this.modifiers)}get modifiers(){return this[T]}set modifiers(t){if((Array.isArray(t)||t instanceof Set)&&[...t].every((t=>"string"==typeof t)))this[T]=new Set([...t]);else{if(t||0===t)throw new TypeError(`modifiers must be a Set or array of modifier names: ${t}`);this[T]=new Set}}get useInTotal(){return!!this[O]}set useInTotal(t){this[O]=!!t}get value(){return n(this[$])?this[$]:this[N]}set value(t){if(t===1/0)throw new RangeError("Result value must be a finite number");if(!n(t))throw new TypeError(`Result value is invalid: ${t}`);this[$]=Number(t)}toJSON(){const{calculationValue:t,initialValue:e,modifierFlags:r,modifiers:o,useInTotal:i,value:n}=this;return{calculationValue:t,initialValue:e,modifierFlags:r,modifiers:[...o],type:"result",useInTotal:i,value:n}}toString(){return this.value+this.modifierFlags}}const D=Symbol("rolls");class RollResults{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.rolls=t}get length(){return this.rolls.length||0}get rolls(){return[...this[D]]}set rolls(t){if(!t||!Array.isArray(t))throw new TypeError(`rolls must be an array: ${t}`);this[D]=[],t.forEach((t=>{this.addRoll(t)}))}get value(){return this.rolls.reduce(((t,e)=>t+(e.useInTotal?e.calculationValue:0)),0)}addRoll(t){const e=t instanceof RollResult?t:new RollResult(t);this[D].push(e)}toJSON(){const{rolls:t,value:e}=this;return{rolls:t,type:"roll-results",value:e}}toString(){return`[${this.rolls.join(", ")}]`}}const P=Symbol("once");class ReRollModifier extends ComparisonModifier{constructor(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];super(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null),this.once=!!t,this.order=4}get name(){return"re-roll"}get notation(){return`r${this.once?"o":""}${super.notation}`}get once(){return!!this[P]}set once(t){this[P]=!!t}run(t,e){if(e.min===e.max)throw new DieActionValueError(e,"re-roll");return t.rolls.map((t=>{for(let r=0;r<this.maxIterations&&this.isComparePoint(t.value);r++){const r=e.rollOnce();if(t.value=r.value,t.modifiers.add("re-roll"+(this.once?"-once":"")),this.once)break}return t})),t}toJSON(){const{once:t}=this;return Object.assign(super.toJSON(),{once:t})}}const F=Symbol("modifiers"),j=Symbol("qty"),I=Symbol("sides"),J=Symbol("min-value"),q=Symbol("max-value");class StandardDice extends HasDescription{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;if(super(arguments.length>5&&void 0!==arguments[5]?arguments[5]:null),!t&&0!==t)throw new RequiredArgumentError("sides");if(t===1/0)throw new RangeError("numerical sides must be finite number");if(n(t)){if(t<1||!s(t))throw new RangeError("numerical sides must be a positive finite number")}else if("string"!=typeof t)throw new TypeError("non-numerical sides must be a string");if(!n(e))throw new TypeError("qty must be a positive finite integer");if(e<1||e>999)throw new RangeError("qty must be between 1 and 999");let a=o;if(null==a)a=1;else{if(!n(a))throw new TypeError("min must a finite number");if(!s(a))throw new RangeError("min must a finite number")}if(i&&!n(i))throw new TypeError("max must a finite number");if(i&&!s(i))throw new RangeError("max must a finite number");this[j]=parseInt(`${e}`,10),this[I]=t,r&&(this.modifiers=r),this[J]=parseInt(a,10),this[q]=i?parseInt(`${i}`,10):t}get average(){return(this.min+this.max)/2}get modifiers(){return this[F]?new Map([...this[F]].sort(((t,e)=>t[1].order-e[1].order))):null}set modifiers(t){let e;if(t instanceof Map)e=t;else if(Array.isArray(t))e=new Map(t.map((t=>[t.name,t])));else{if("object"!=typeof t)throw new TypeError("modifiers should be a Map, array, or an Object containing Modifiers");e=new Map(Object.entries(t))}if(e.size&&[...e.entries()].some((t=>!(t[1]instanceof Modifier))))throw new TypeError("modifiers must only contain Modifier instances");this[F]=e,this[F].forEach((t=>{t instanceof ExplodeModifier&&!t.comparePoint?t.comparePoint=new ComparePoint("=",this.max):t instanceof ReRollModifier&&!t.comparePoint&&(t.comparePoint=new ComparePoint("=",this.min))}))}get max(){return this[q]}get min(){return this[J]}get name(){return"standard"}get notation(){let t=`${this.qty}d${this.sides}`;return this.modifiers&&this.modifiers.size&&(t+=[...this.modifiers.values()].reduce(((t,e)=>t+e.notation),"")),t}get qty(){return this[j]}get sides(){return this[I]}roll(){const t=new RollResults;for(let e=0;e<this.qty;e++)t.addRoll(this.rollOnce());return(this.modifiers||[]).forEach((e=>{e.run(t,this)})),t}rollOnce(){return new RollResult(p.integer(this.min,this.max))}toJSON(){const{average:t,max:e,min:r,modifiers:o,name:i,notation:n,qty:s,sides:a}=this;return Object.assign(super.toJSON(),{average:t,max:e,min:r,modifiers:o,name:i,notation:n,qty:s,sides:a,type:"die"})}toString(){return`${this.notation}${this.description?` ${this.description}`:""}`}}class FudgeDice extends StandardDice{constructor(){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:2;if(o||0===o){if(1!==o&&2!==o)throw new RangeError("nonBlanks must be 1 or 2")}else o=2;super(o,t,e,-1,1,r)}get name(){return"fudge"}get nonBlanks(){return super.sides}get sides(){return`F.${this.nonBlanks}`}rollOnce(){let t=0;if(2===this.nonBlanks)t=p.integer(1,3)-2;else if(1===this.nonBlanks){const e=p.integer(1,6);1===e?t=-1:6===e&&(t=1)}return new RollResult(t)}}class PercentileDice extends StandardDice{constructor(){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(100,arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,null,null,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null),this.sidesAsNumber=!!t}get name(){return"percentile"}get sides(){return this.sidesAsNumber?super.sides:"%"}}var G=Object.freeze({__proto__:null,FudgeDice:FudgeDice,PercentileDice:PercentileDice,StandardDice:StandardDice});class CriticalFailureModifier extends ComparisonModifier{constructor(t){super(t),this.order=9}get name(){return"critical-failure"}get notation(){return`cf${super.notation}`}run(t,e){return t.rolls.forEach((t=>(this.isComparePoint(t.value)&&t.modifiers.add("critical-failure"),t))),t}}class CriticalSuccessModifier extends ComparisonModifier{constructor(t){super(t),this.order=8}get name(){return"critical-success"}get notation(){return`cs${super.notation}`}run(t,e){return t.rolls.forEach((t=>(this.isComparePoint(t.value)&&t.modifiers.add("critical-success"),t))),t}}const V=Symbol("calculation-value"),_=Symbol("is-roll-group"),k=Symbol("modifiers"),B=Symbol("results"),L=Symbol("use-in-total");class ResultGroup{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this.isRollGroup=r,this.modifiers=e,this.results=t,this.useInTotal=o}get calculationValue(){return n(this[V])?parseFloat(this[V]):this.value}set calculationValue(t){const e=n(t);if(t===1/0)throw new RangeError("Results calculation value must be a finite number");if(t&&!e)throw new TypeError(`Results calculation value is invalid: ${t}`);this[V]=e?parseFloat(`${t}`):null}get isRollGroup(){return this[_]}set isRollGroup(t){this[_]=!!t}get length(){return this.results.length||0}get modifierFlags(){return M(...this.modifiers)}get modifiers(){return this[k]}set modifiers(t){if((Array.isArray(t)||t instanceof Set)&&[...t].every((t=>"string"==typeof t)))this[k]=new Set([...t]);else{if(t||0===t)throw new TypeError(`modifiers must be a Set or array of modifier names: ${t}`);this[k]=new Set}}get results(){return[...this[B]]}set results(t){if(!t||!Array.isArray(t))throw new TypeError(`results must be an array: ${t}`);this[B]=[],t.forEach((t=>{this.addResult(t)}))}get useInTotal(){return!!this[L]}set useInTotal(t){this[L]=!!t}get value(){if(!this.results.length)return 0;const t=this.results.reduce(((t,e)=>{let r=e;return e instanceof ResultGroup?r=e.useInTotal?e.calculationValue:0:e instanceof RollResults&&(r=e.value),t+r}),"string"==typeof this.results[0]?"":0);return"string"==typeof t?i(t):t}addResult(t){let e;if(t instanceof ResultGroup||t instanceof RollResults)e=t;else{if("string"!=typeof t&&!n(t))throw new TypeError("value must be one of ResultGroup, RollResults, string, or number");e=t}this[B].push(e)}toJSON(){const{calculationValue:t,isRollGroup:e,modifierFlags:r,modifiers:o,results:i,useInTotal:n,value:s}=this;return{calculationValue:t,isRollGroup:e,modifierFlags:r,modifiers:[...o],results:i,type:"result-group",useInTotal:n,value:s}}toString(){let t;return t=this.isRollGroup?`{${this.results.join(", ")}}`:this.results.join(""),this.modifierFlags&&(t=`(${t})${this.modifierFlags}`),t}}const z=Symbol("end"),K=Symbol("qty");class KeepModifier extends Modifier{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"h",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;super(),this.end=t,this.qty=e,this.order=5}get end(){return this[z]}set end(t){if("h"!==t&&"l"!==t)throw new RangeError('End must be "h" or "l"');this[z]=t}get name(){return`keep-${this.end}`}get notation(){return`k${this.end}${this.qty}`}get qty(){return this[K]}set qty(t){if(t===1/0)throw new RangeError("qty must be a finite number");if(!n(t)||t<1)throw new TypeError("qty must be a positive finite integer");this[K]=Math.floor(t)}rangeToDrop(t){return"h"===this.end?[0,t.length-this.qty]:[this.qty,t.length]}run(t,e){let r,o;return t instanceof ResultGroup?(r=t.results,o=1===r.length&&r[0]instanceof ResultGroup?r[0].results.map(((t,e)=>t instanceof RollResults?t.rolls.map(((t,r)=>({value:t.value,index:[e,r]}))):null)).flat().filter(Boolean):[...r].map(((t,e)=>({value:t.value,index:e})))):(r=t.rolls,o=[...r].map(((t,e)=>({value:t.value,index:e})))),o=o.sort(((t,e)=>t.value-e.value)).map((t=>t.index)).slice(...this.rangeToDrop(o)),o.forEach((t=>{let e;e=Array.isArray(t)?r[0].results[t[0]].rolls[t[1]]:r[t],e.modifiers.add("drop"),e.useInTotal=!1})),t}toJSON(){const{end:t,qty:e}=this;return Object.assign(super.toJSON(),{end:t,qty:e})}}class DropModifier extends KeepModifier{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"l",arguments.length>1&&void 0!==arguments[1]?arguments[1]:1),this.order=6}get name(){return`drop-${this.end}`}get notation(){return`d${this.end}${this.qty}`}rangeToDrop(t){return"h"===this.end?[t.length-this.qty,t.length]:[0,this.qty]}}const U=Symbol("max");class MaxModifier extends Modifier{constructor(t){super(),this.max=t,this.order=2}get max(){return this[U]}set max(t){if(!n(t))throw new TypeError("max must be a number");this[U]=parseFloat(`${t}`)}get name(){return"max"}get notation(){return`max${this.max}`}run(t,e){const r=t;return r.rolls=t.rolls.map((t=>{const e=t;return t.value>this.max&&(e.value=this.max,e.modifiers.add("max")),e})),r}toJSON(){const{max:t}=this;return Object.assign(super.toJSON(),{max:t})}}const H=Symbol("min");class MinModifier extends Modifier{constructor(t){super(),this.min=t,this.order=1}get min(){return this[H]}set min(t){if(!n(t))throw new TypeError("min must be a number");this[H]=parseFloat(`${t}`)}get name(){return"min"}get notation(){return`min${this.min}`}run(t,e){const r=t;return r.rolls=t.rolls.map((t=>{const e=t;return t.value<this.min&&(e.value=this.min,e.modifiers.add("min")),e})),r}toJSON(){const{min:t}=this;return Object.assign(super.toJSON(),{min:t})}}const X=Symbol("direction");class SortingModifier extends Modifier{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"a";super(),this.direction=t,this.order=10}get direction(){return this[X]}set direction(t){if("a"!==t&&"d"!==t)throw new RangeError('Direction must be "a" (Ascending) or "d" (Descending)');this[X]=t}get name(){return"sorting"}get notation(){return`s${this.direction}`}run(t,e){let r;return r=t instanceof ResultGroup?"results":"rolls",t[r]=t[r].sort(((t,e)=>"d"===this.direction?e.value-t.value:t.value-e.value)),t instanceof ResultGroup&&(t[r]=t[r].map((t=>t instanceof ResultGroup||t instanceof RollResults?this.run(t,e):t))),t}toJSON(){const{direction:t}=this;return Object.assign(super.toJSON(),{direction:t})}}const Q=Symbol("failure-cp");class TargetModifier extends ComparisonModifier{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;super(t),this.failureComparePoint=e,this.order=7}get failureComparePoint(){return this[Q]}set failureComparePoint(t){if(t&&!(t instanceof ComparePoint))throw new TypeError("failure comparePoint must be instance of ComparePoint or null");this[Q]=t||null}get name(){return"target"}get notation(){return`${super.notation}${this.failureComparePoint?`f${this.failureComparePoint}`:""}`}get successComparePoint(){return this.comparePoint}set successComparePoint(t){super.comparePoint=t}getStateValue(t){return this.isSuccess(t)?1:this.isFailure(t)?-1:0}isFailure(t){return!!this.failureComparePoint&&this.failureComparePoint.isMatch(t)}isNeutral(t){return!this.isSuccess(t)&&!this.isFailure(t)}isSuccess(t){return this.isComparePoint(t)}run(t,e){let r;return r=t instanceof ResultGroup?t.results:t.rolls,r.forEach((t=>{this.isSuccess(t.value)?t.modifiers.add("target-success"):this.isFailure(t.value)&&t.modifiers.add("target-failure"),t.calculationValue=this.getStateValue(t.value)})),t}toJSON(){const{failureComparePoint:t,successComparePoint:e}=this,r=super.toJSON();return delete r.comparePoint,Object.assign(r,{failureComparePoint:t,successComparePoint:e})}}var W=Object.freeze({__proto__:null,ComparisonModifier:ComparisonModifier,CriticalFailureModifier:CriticalFailureModifier,CriticalSuccessModifier:CriticalSuccessModifier,DropModifier:DropModifier,ExplodeModifier:ExplodeModifier,KeepModifier:KeepModifier,MaxModifier:MaxModifier,MinModifier:MinModifier,Modifier:Modifier,ReRollModifier:ReRollModifier,SortingModifier:SortingModifier,TargetModifier:TargetModifier}),Y=Object.freeze({__proto__:null,ResultGroup:ResultGroup,RollResult:RollResult,RollResults:RollResults});const Z=t=>{try{return!(!t||btoa(atob(t))!==t)}catch(t){return!1}},tt=t=>{try{const e=!!t&&JSON.parse(t);return!(!e||"object"!=typeof e)}catch(t){return!1}},et=Symbol("expressions"),rt=Symbol("modifiers");class RollGroup extends HasDescription{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];super(arguments.length>2&&void 0!==arguments[2]?arguments[2]:null),this.expressions=t,this.modifiers=e}get expressions(){return[...this[et]||[]]}set expressions(t){if(!t)throw new RequiredArgumentError("expressions");if(!Array.isArray(t))throw new TypeError(`expressions must be an array: ${t}`);this[et]=[],t.forEach((e=>{if(!e||!Array.isArray(e))throw new TypeError(`Expressions must be an array of arrays: ${t}`);if(0===e.length)throw new TypeError(`Sub expressions cannot be empty: ${t}`);if(!e.every((t=>t instanceof StandardDice||"string"==typeof t||"number"==typeof t)))throw new TypeError("Sub expression items must be Dice, numbers, or strings");this[et].push(e)}))}get modifiers(){return this[rt]?new Map([...this[rt]].sort(((t,e)=>t[1].order-e[1].order))):null}set modifiers(t){let e;if(t instanceof Map)e=t;else if(Array.isArray(t))e=new Map(t.map((t=>[t.name,t])));else{if("object"!=typeof t)throw new TypeError("modifiers should be a Map, array, or an Object containing Modifiers");e=new Map(Object.entries(t))}if(e.size&&[...e.entries()].some((t=>!(t[1]instanceof Modifier))))throw new TypeError("modifiers must only contain Modifier instances");this[rt]=e}get notation(){let t=this.expressions.map((t=>t.reduce(((t,e)=>t+e),""))).join(", ");return t=`{${t}}`,this.modifiers&&this.modifiers.size&&(t+=[...this.modifiers.values()].reduce(((t,e)=>t+e.notation),"")),t}roll(){const t=new ResultGroup(this.expressions.map((t=>{const e=t.map((t=>t instanceof StandardDice?t.roll():t));return new ResultGroup(e)})));return t.isRollGroup=!0,(this.modifiers||[]).forEach((e=>{e.run(t,this)})),t}toJSON(){const{modifiers:t,notation:e,expressions:r}=this;return Object.assign(super.toJSON(),{expressions:r,modifiers:t,notation:e,type:"group"})}toString(){return`${this.notation}${this.description?` ${this.description}`:""}`}}function ot(t,e,r,o){var i=Error.call(this,t);return Object.setPrototypeOf&&Object.setPrototypeOf(i,ot.prototype),i.expected=e,i.found=r,i.location=o,i.name="SyntaxError",i}function it(t,e,r){return r=r||" ",t.length>e?t:(e-=t.length,t+(r+=r.repeat(e)).slice(0,e))}function nt(t,e){var r,o,n,s,a={},l=(e=void 0!==e?e:{}).grammarSource,u={Main:we},c=we,h=",",p="d",f="d%",d="dF",m="!",g="max",y="min",v="cs",b="cf",w="!=",E="<=",R=">=",S="<>",x="(",A=")",M="abs",C="ceil",T="cos",N="exp",O="floor",$="log",D="round",P="sign",F="sin",j="sqrt",I="tan",J="pow",q="/*",G="*/",V="//",_=/^[12]/,k=/^[lh]/,B=/^[.]/,L=/^[1-9]/,z=/^[0-9]/,K=/^[^\]]/,U=/^[\n\r\u2028\u2029]/,H=/^[ \t\n\r]/,X=de("{",!1),Q=de(",",!1),W=de("}",!1),Y=de("d",!1),Z=de("d%",!1),tt=de("dF",!1),et=de(".",!1),rt=me(["1","2"],!1,!1),it=de("!",!1),nt=de("p",!1),st=me(["l","h"],!1,!1),at=de("k",!1),lt=de("max",!1),ut=de("min",!1),ct=de("r",!1),ht=de("o",!1),pt=de("cs",!1),ft=de("cf",!1),dt=de("s",!1),mt=de("a",!1),gt=de("f",!1),yt=de("!=",!1),vt=de("<=",!1),bt=de(">=",!1),wt=de("=",!1),Et=de("<>",!1),Rt=de(">",!1),St=de("<",!1),xt=de("(",!1),At=de(")",!1),Mt=de("abs",!1),Ct=de("ceil",!1),Tt=de("cos",!1),Nt=de("exp",!1),Ot=de("floor",!1),$t=de("log",!1),Dt=de("round",!1),Pt=de("sign",!1),Ft=de("sin",!1),jt=de("sqrt",!1),It=de("tan",!1),Jt=de("pow",!1),qt=de("-",!1),Gt=me(["."],!1,!1),Vt=me([["1","9"]],!1,!1),_t=me([["0","9"]],!1,!1),kt=de("**",!1),Bt=de("*",!1),Lt=de("^",!1),zt=de("%",!1),Kt=de("/",!1),Ut=de("+",!1),Ht=ge("comment"),Xt=de("/*",!1),Qt=de("*/",!1),Wt={type:"any"},Yt=de("[",!1),Zt=me(["]"],!0,!1),te=de("]",!1),ee=de("//",!1),re=de("#",!1),oe=me(["\n","\r","\u2028","\u2029"],!1,!1),ie=ge("whitespace"),ne=me([" ","\t","\n","\r"],!1,!1),se=ge("whitespace or comment"),ae=0,le=0,ue=[{line:1,column:1}],ce=0,he=[],pe=0;if("startRule"in e){if(!(e.startRule in u))throw new Error("Can't start parsing from rule \""+e.startRule+'".');c=u[e.startRule]}function fe(){return t.substring(le,ae)}function de(t,e){return{type:"literal",text:t,ignoreCase:e}}function me(t,e,r){return{type:"class",parts:t,inverted:e,ignoreCase:r}}function ge(t){return{type:"other",description:t}}function ye(e){var r,o=ue[e];if(o)return o;for(r=e-1;!ue[r];)r--;for(o={line:(o=ue[r]).line,column:o.column};r<e;)10===t.charCodeAt(r)?(o.line++,o.column=1):o.column++,r++;return ue[e]=o,o}function ve(t,e){var r=ye(t),o=ye(e);return{source:l,start:{offset:t,line:r.line,column:r.column},end:{offset:e,line:o.line,column:o.column}}}function be(t){ae<ce||(ae>ce&&(ce=ae,he=[]),he.push(t))}function we(){return Me()}function Ee(){var e,r,o,i,n,s,l,u,c,h,p;if(e=ae,123===t.charCodeAt(ae)?(r="{",ae++):(r=a,0===pe&&be(X)),r!==a)if(je(),(o=Me())!==a){for(i=[],n=ae,s=je(),44===t.charCodeAt(ae)?(l=",",ae++):(l=a,0===pe&&be(Q)),l!==a?(u=je(),(c=Me())!==a?n=s=[s,l,u,c]:(ae=n,n=a)):(ae=n,n=a);n!==a;)i.push(n),n=ae,s=je(),44===t.charCodeAt(ae)?(l=",",ae++):(l=a,0===pe&&be(Q)),l!==a?(u=je(),(c=Me())!==a?n=s=[s,l,u,c]:(ae=n,n=a)):(ae=n,n=a);if(n=je(),125===t.charCodeAt(ae)?(s="}",ae++):(s=a,0===pe&&be(W)),s!==a){for(l=[],u=Se();u!==a;)l.push(u),u=Se();u=Ie(),le=e,h=l,p=u,e=new RollGroup([o,...i.map((t=>t[3]))],Object.assign({},...h.map((t=>({[t.name]:t})))),p.find((t=>t instanceof Description)))}else ae=e,e=a}else ae=e,e=a;else ae=e,e=a;return e}function Re(){var e,r,o,i,n,s,l;if(e=ae,r=function(){var e,r,o,i;e=ae,(r=Ae())===a&&(r=null);100===t.charCodeAt(ae)?(o=p,ae++):(o=a,0===pe&&be(Y));o!==a&&(i=Ae())!==a?(le=e,e=new StandardDice(i,r||1)):(ae=e,e=a);return e}(),r===a&&(r=function(){var e,r,o;e=ae,(r=Ae())===a&&(r=null);t.substr(ae,2)===f?(o=f,ae+=2):(o=a,0===pe&&be(Z));o!==a?(le=e,e=new PercentileDice(r||1)):(ae=e,e=a);return e}(),r===a&&(r=function(){var e,r,o,i,n,s;e=ae,(r=Ae())===a&&(r=null);t.substr(ae,2)===d?(o=d,ae+=2):(o=a,0===pe&&be(tt));o!==a?(i=ae,46===t.charCodeAt(ae)?(n=".",ae++):(n=a,0===pe&&be(et)),n!==a?(_.test(t.charAt(ae))?(s=t.charAt(ae),ae++):(s=a,0===pe&&be(rt)),s!==a?i=n=[n,s]:(ae=i,i=a)):(ae=i,i=a),i===a&&(i=null),le=e,l=r,e=new FudgeDice((u=i)?parseInt(u[1],10):2,l||1)):(ae=e,e=a);var l,u;return e}())),r!==a){for(o=[],i=Se();i!==a;)o.push(i),i=Se();i=Ie(),le=e,s=o,l=i,(n=r).modifiers=Object.assign({},...s.map((t=>({[t.name]:t})))),n.description=l.find((t=>t instanceof Description)),e=n}else ae=e,e=a;return e}function Se(){var e;return(e=function(){var e,r,o,i,n;e=ae,33===t.charCodeAt(ae)?(r=m,ae++):(r=a,0===pe&&be(it));r!==a?(33===t.charCodeAt(ae)?(o=m,ae++):(o=a,0===pe&&be(it)),o===a&&(o=null),112===t.charCodeAt(ae)?(i="p",ae++):(i=a,0===pe&&be(nt)),i===a&&(i=null),(n=xe())===a&&(n=null),le=e,e=new ExplodeModifier(n,!!o,!!i)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o;e=ae,(r=xe())!==a?(o=function(){var e,r,o;e=ae,102===t.charCodeAt(ae)?(r="f",ae++):(r=a,0===pe&&be(gt));r!==a&&(o=xe())!==a?(le=e,e=o):(ae=e,e=a);return e}(),o===a&&(o=null),le=e,e=new TargetModifier(r,o)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o,i;e=ae,100===t.charCodeAt(ae)?(r=p,ae++):(r=a,0===pe&&be(Y));r!==a?(k.test(t.charAt(ae))?(o=t.charAt(ae),ae++):(o=a,0===pe&&be(st)),o===a&&(o=null),(i=Ne())!==a?(le=e,e=new DropModifier(o||"l",i)):(ae=e,e=a)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o,i;e=ae,107===t.charCodeAt(ae)?(r="k",ae++):(r=a,0===pe&&be(at));r!==a?(k.test(t.charAt(ae))?(o=t.charAt(ae),ae++):(o=a,0===pe&&be(st)),o===a&&(o=null),(i=Ne())!==a?(le=e,e=new KeepModifier(o||"h",i)):(ae=e,e=a)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o,i;e=ae,114===t.charCodeAt(ae)?(r="r",ae++):(r=a,0===pe&&be(ct));r!==a?(111===t.charCodeAt(ae)?(o="o",ae++):(o=a,0===pe&&be(ht)),o===a&&(o=null),(i=xe())===a&&(i=null),le=e,e=new ReRollModifier(!!o,i)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o;e=ae,t.substr(ae,2)===v?(r=v,ae+=2):(r=a,0===pe&&be(pt));r!==a&&(o=xe())!==a?(le=e,e=new CriticalSuccessModifier(o)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o;e=ae,t.substr(ae,2)===b?(r=b,ae+=2):(r=a,0===pe&&be(ft));r!==a&&(o=xe())!==a?(le=e,e=new CriticalFailureModifier(o)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o;e=ae,115===t.charCodeAt(ae)?(r="s",ae++):(r=a,0===pe&&be(dt));r!==a?(97===t.charCodeAt(ae)?(o="a",ae++):(o=a,0===pe&&be(mt)),o===a&&(100===t.charCodeAt(ae)?(o=p,ae++):(o=a,0===pe&&be(Y))),o===a&&(o=null),le=e,e=new SortingModifier(o||"a")):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o;e=ae,t.substr(ae,3)===g?(r=g,ae+=3):(r=a,0===pe&&be(lt));r!==a&&(o=Te())!==a?(le=e,e=new MaxModifier(o)):(ae=e,e=a);return e}())===a&&(e=function(){var e,r,o;e=ae,t.substr(ae,3)===y?(r=y,ae+=3):(r=a,0===pe&&be(ut));r!==a&&(o=Te())!==a?(le=e,e=new MinModifier(o)):(ae=e,e=a);return e}()),e}function xe(){var e,r,o;return e=ae,r=function(){var e;t.substr(ae,2)===w?(e=w,ae+=2):(e=a,0===pe&&be(yt));e===a&&(t.substr(ae,2)===E?(e=E,ae+=2):(e=a,0===pe&&be(vt)),e===a&&(t.substr(ae,2)===R?(e=R,ae+=2):(e=a,0===pe&&be(bt)),e===a&&(61===t.charCodeAt(ae)?(e="=",ae++):(e=a,0===pe&&be(wt)),e===a&&(t.substr(ae,2)===S?(e=S,ae+=2):(e=a,0===pe&&be(Et)),e===a&&(62===t.charCodeAt(ae)?(e=">",ae++):(e=a,0===pe&&be(Rt)),e===a&&(60===t.charCodeAt(ae)?(e="<",ae++):(e=a,0===pe&&be(St))))))));return e}(),r!==a&&(o=Te())!==a?(le=e,e=function(t,e){return new ComparePoint(t,e)}(r,o)):(ae=e,e=a),e}function Ae(){var e,r,o,n,s,l,u,c,h,p;if((e=Ne())===a)if(e=ae,40===t.charCodeAt(ae)?(r=x,ae++):(r=a,0===pe&&be(xt)),r!==a){if(je(),o=ae,(n=Te())!==a){if(s=[],l=ae,u=je(),(c=$e())!==a?(h=je(),(p=Te())!==a?l=u=[u,c,h,p]:(ae=l,l=a)):(ae=l,l=a),l!==a)for(;l!==a;)s.push(l),l=ae,u=je(),(c=$e())!==a?(h=je(),(p=Te())!==a?l=u=[u,c,h,p]:(ae=l,l=a)):(ae=l,l=a);else s=a;s!==a?o=n=[n,s]:(ae=o,o=a)}else ae=o,o=a;o!==a?(n=je(),41===t.charCodeAt(ae)?(s=A,ae++):(s=a,0===pe&&be(At)),s!==a?(le=e,e=i(fe())):(ae=e,e=a)):(ae=e,e=a)}else ae=e,e=a;return e}function Me(){var t,e,r,o,i,n,s,l,u,c;if(t=ae,(e=Ce())!==a){for(r=[],o=ae,i=je(),(n=$e())!==a?(s=je(),(l=Ce())!==a?o=i=[i,n,s,l]:(ae=o,o=a)):(ae=o,o=a);o!==a;)r.push(o),o=ae,i=je(),(n=$e())!==a?(s=je(),(l=Ce())!==a?o=i=[i,n,s,l]:(ae=o,o=a)):(ae=o,o=a);le=t,u=e,c=r,u=Array.isArray(u)?u:[u],t=[...u,...c.map((t=>{let[,e,,r]=t;return[e,r]})).flat(2)]}else ae=t,t=a;return t}function Ce(){var e,r,o,i,n,s;return e=function(){var e,r,o,i,n,s,l;e=ae,t.substr(ae,3)===M?(r=M,ae+=3):(r=a,0===pe&&be(Mt));r===a&&(t.substr(ae,4)===C?(r=C,ae+=4):(r=a,0===pe&&be(Ct)),r===a&&(t.substr(ae,3)===T?(r=T,ae+=3):(r=a,0===pe&&be(Tt)),r===a&&(t.substr(ae,3)===N?(r=N,ae+=3):(r=a,0===pe&&be(Nt)),r===a&&(t.substr(ae,5)===O?(r=O,ae+=5):(r=a,0===pe&&be(Ot)),r===a&&(t.substr(ae,3)===$?(r=$,ae+=3):(r=a,0===pe&&be($t)),r===a&&(t.substr(ae,5)===D?(r=D,ae+=5):(r=a,0===pe&&be(Dt)),r===a&&(t.substr(ae,4)===P?(r=P,ae+=4):(r=a,0===pe&&be(Pt)),r===a&&(t.substr(ae,3)===F?(r=F,ae+=3):(r=a,0===pe&&be(Ft)),r===a&&(t.substr(ae,4)===j?(r=j,ae+=4):(r=a,0===pe&&be(jt)),r===a&&(t.substr(ae,3)===I?(r=I,ae+=3):(r=a,0===pe&&be(It))))))))))));r!==a?(40===t.charCodeAt(ae)?(o=x,ae++):(o=a,0===pe&&be(xt)),o!==a?(je(),(i=Me())!==a?(je(),41===t.charCodeAt(ae)?(n=A,ae++):(n=a,0===pe&&be(At)),n!==a?(le=e,u=i,e=[`${r}(`,...u,")"]):(ae=e,e=a)):(ae=e,e=a)):(ae=e,e=a)):(ae=e,e=a);var u;e===a&&(e=ae,t.substr(ae,3)===J?(r=J,ae+=3):(r=a,0===pe&&be(Jt)),r===a&&(t.substr(ae,3)===g?(r=g,ae+=3):(r=a,0===pe&&be(lt)),r===a&&(t.substr(ae,3)===y?(r=y,ae+=3):(r=a,0===pe&&be(ut)))),r!==a?(40===t.charCodeAt(ae)?(o=x,ae++):(o=a,0===pe&&be(xt)),o!==a?(je(),(i=Me())!==a?(je(),44===t.charCodeAt(ae)?(n=h,ae++):(n=a,0===pe&&be(Q)),n!==a?(je(),(s=Me())!==a?(je(),41===t.charCodeAt(ae)?(l=A,ae++):(l=a,0===pe&&be(At)),l!==a?(le=e,e=function(t,e,r){return[`${t}(`,...e,",",...r,")"]}(r,i,s)):(ae=e,e=a)):(ae=e,e=a)):(ae=e,e=a)):(ae=e,e=a)):(ae=e,e=a)):(ae=e,e=a));return e}(),e===a&&(e=Re())===a&&(e=Te())===a&&(e=ae,40===t.charCodeAt(ae)?(r=x,ae++):(r=a,0===pe&&be(xt)),r!==a?(je(),(o=Me())!==a?(je(),41===t.charCodeAt(ae)?(i=A,ae++):(i=a,0===pe&&be(At)),i!==a?(le=e,n=o,s=i,e=[r,...n,s]):(ae=e,e=a)):(ae=e,e=a)):(ae=e,e=a),e===a&&(e=Ee())),e}function Te(){var e,r,o,i;return e=ae,45===t.charCodeAt(ae)?ae++:0===pe&&be(qt),Oe()!==a?(r=ae,B.test(t.charAt(ae))?(o=t.charAt(ae),ae++):(o=a,0===pe&&be(Gt)),o!==a&&(i=Oe())!==a?r=o=[o,i]:(ae=r,r=a),r===a&&(r=null),le=e,e=parseFloat(fe())):(ae=e,e=a),e}function Ne(){var e,r,o,i;if(e=ae,L.test(t.charAt(ae))?(r=t.charAt(ae),ae++):(r=a,0===pe&&be(Vt)),r!==a){for(o=[],z.test(t.charAt(ae))?(i=t.charAt(ae),ae++):(i=a,0===pe&&be(_t));i!==a;)o.push(i),z.test(t.charAt(ae))?(i=t.charAt(ae),ae++):(i=a,0===pe&&be(_t));le=e,e=parseInt(fe(),10)}else ae=e,e=a;return e}function Oe(){var e,r,o;if(e=ae,r=[],z.test(t.charAt(ae))?(o=t.charAt(ae),ae++):(o=a,0===pe&&be(_t)),o!==a)for(;o!==a;)r.push(o),z.test(t.charAt(ae))?(o=t.charAt(ae),ae++):(o=a,0===pe&&be(_t));else r=a;return r!==a&&(le=e,r=parseInt(fe(),10)),e=r}function $e(){var e,r;return e=ae,"**"===t.substr(ae,2)?(r="**",ae+=2):(r=a,0===pe&&be(kt)),r!==a&&(le=e,r="^"),(e=r)===a&&(42===t.charCodeAt(ae)?(e="*",ae++):(e=a,0===pe&&be(Bt)),e===a&&(94===t.charCodeAt(ae)?(e="^",ae++):(e=a,0===pe&&be(Lt)),e===a&&(37===t.charCodeAt(ae)?(e="%",ae++):(e=a,0===pe&&be(zt)),e===a&&(47===t.charCodeAt(ae)?(e="/",ae++):(e=a,0===pe&&be(Kt)),e===a&&(43===t.charCodeAt(ae)?(e="+",ae++):(e=a,0===pe&&be(Ut)),e===a&&(45===t.charCodeAt(ae)?(e="-",ae++):(e=a,0===pe&&be(qt)))))))),e}function De(){var e;return pe++,e=function(){var e,r,o,i,n,s;e=ae,t.substr(ae,2)===q?(r=q,ae+=2):(r=a,0===pe&&be(Xt));if(r!==a){for(o=[],i=ae,n=ae,pe++,t.substr(ae,2)===G?(s=G,ae+=2):(s=a,0===pe&&be(Qt)),pe--,s===a?n=void 0:(ae=n,n=a),n!==a?(t.length>ae?(s=t.charAt(ae),ae++):(s=a,0===pe&&be(Wt)),s!==a?i=n=[n,s]:(ae=i,i=a)):(ae=i,i=a);i!==a;)o.push(i),i=ae,n=ae,pe++,t.substr(ae,2)===G?(s=G,ae+=2):(s=a,0===pe&&be(Qt)),pe--,s===a?n=void 0:(ae=n,n=a),n!==a?(t.length>ae?(s=t.charAt(ae),ae++):(s=a,0===pe&&be(Wt)),s!==a?i=n=[n,s]:(ae=i,i=a)):(ae=i,i=a);t.substr(ae,2)===G?(i=G,ae+=2):(i=a,0===pe&&be(Qt)),i!==a?(le=e,e=function(t){return new Description(t.flat().join(""),Description.types.MULTILINE)}(o)):(ae=e,e=a)}else ae=e,e=a;if(e===a)if(e=ae,91===t.charCodeAt(ae)?(r="[",ae++):(r=a,0===pe&&be(Yt)),r!==a){for(o=[],K.test(t.charAt(ae))?(i=t.charAt(ae),ae++):(i=a,0===pe&&be(Zt));i!==a;)o.push(i),K.test(t.charAt(ae))?(i=t.charAt(ae),ae++):(i=a,0===pe&&be(Zt));93===t.charCodeAt(ae)?(i="]",ae++):(i=a,0===pe&&be(te)),i!==a?(le=e,e=function(t){return new Description(t.flat().join(""),Description.types.MULTILINE)}(o)):(ae=e,e=a)}else ae=e,e=a;return e}(),e===a&&(e=function(){var e,r,o,i,n,s;e=ae,t.substr(ae,2)===V?(r=V,ae+=2):(r=a,0===pe&&be(ee));r===a&&(35===t.charCodeAt(ae)?(r="#",ae++):(r=a,0===pe&&be(re)));if(r!==a){for(o=[],i=ae,n=ae,pe++,s=Pe(),pe--,s===a?n=void 0:(ae=n,n=a),n!==a?(t.length>ae?(s=t.charAt(ae),ae++):(s=a,0===pe&&be(Wt)),s!==a?i=n=[n,s]:(ae=i,i=a)):(ae=i,i=a);i!==a;)o.push(i),i=ae,n=ae,pe++,s=Pe(),pe--,s===a?n=void 0:(ae=n,n=a),n!==a?(t.length>ae?(s=t.charAt(ae),ae++):(s=a,0===pe&&be(Wt)),s!==a?i=n=[n,s]:(ae=i,i=a)):(ae=i,i=a);le=e,e=function(t){return new Description(t.flat().join(""),Description.types.INLINE)}(o)}else ae=e,e=a;return e}()),pe--,e===a&&0===pe&&be(Ht),e}function Pe(){var e;return U.test(t.charAt(ae))?(e=t.charAt(ae),ae++):(e=a,0===pe&&be(oe)),e}function Fe(){var e;return pe++,H.test(t.charAt(ae))?(e=t.charAt(ae),ae++):(e=a,0===pe&&be(ne)),pe--,e===a&&0===pe&&be(ie),e}function je(){var t,e;for(t=[],e=Fe();e!==a;)t.push(e),e=Fe();return t}function Ie(){var t,e;for(pe++,t=[],(e=Fe())===a&&(e=De());e!==a;)t.push(e),(e=Fe())===a&&(e=De());return pe--,e=a,0===pe&&be(se),t}if((r=c())!==a&&ae===t.length)return r;throw r!==a&&ae<t.length&&be({type:"end"}),o=he,n=ce<t.length?t.charAt(ce):null,s=ce<t.length?ve(ce,ce+1):ve(ce,ce),new ot(ot.buildMessage(o,n),o,n,s)}!function(t,e){function r(){this.constructor=t}r.prototype=e.prototype,t.prototype=new r}(ot,Error),ot.prototype.format=function(t){var e="Error: "+this.message;if(this.location){var r,o=null;for(r=0;r<t.length;r++)if(t[r].source===this.location.source){o=t[r].text.split(/\r\n|\n|\r/g);break}var i=this.location.start,n=this.location.source+":"+i.line+":"+i.column;if(o){var s=this.location.end,a=it("",i.line.toString().length," "),l=o[i.line-1],u=(i.line===s.line?s.column:l.length+1)-i.column||1;e+="\n --\x3e "+n+"\n"+a+" |\n"+i.line+" | "+l+"\n"+a+" | "+it("",i.column-1," ")+it("",u,"^")}else e+="\n at "+n}return e},ot.buildMessage=function(t,e){var r={literal:function(t){return'"'+i(t.text)+'"'},class:function(t){var e=t.parts.map((function(t){return Array.isArray(t)?n(t[0])+"-"+n(t[1]):n(t)}));return"["+(t.inverted?"^":"")+e.join("")+"]"},any:function(){return"any character"},end:function(){return"end of input"},other:function(t){return t.description}};function o(t){return t.charCodeAt(0).toString(16).toUpperCase()}function i(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+o(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+o(t)}))}function n(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+o(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+o(t)}))}function s(t){return r[t.type](t)}return"Expected "+function(t){var e,r,o=t.map(s);if(o.sort(),o.length>0){for(e=1,r=1;e<o.length;e++)o[e-1]!==o[e]&&(o[r]=o[e],r++);o.length=r}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(t)+" but "+function(t){return t?'"'+i(t)+'"':"end of input"}(e)+" found."};class Parser{static parse(t){if(!t)throw new RequiredArgumentError("notation");if("string"!=typeof t)throw new TypeError("Notation must be a string");return nt(t)}}const st=Object.freeze({BASE_64:1,JSON:0,OBJECT:2}),at=Symbol("notation"),lt=Symbol("maxTotal"),ut=Symbol("minTotal"),ct=Symbol("expressions"),ht=Symbol("roll-method"),pt=Symbol("rolls"),ft=Symbol("set-rolls"),dt=Symbol("total"),mt=t=>function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return parseFloat(parseFloat(`${t}`).toFixed(e||0))}(t.calculationValue,2);class DiceRoll{constructor(t){if(!t)throw new RequiredArgumentError("notation");if(this[ct]=[],t instanceof Object&&!Array.isArray(t)){if(!t.notation)throw new RequiredArgumentError("notation");if("string"!=typeof t.notation)throw new NotationError(t.notation);t.rolls&&this[ft](t.rolls),this[at]=t.notation,this[ct]=Parser.parse(this.notation),this.hasRolls()||this.roll()}else{if("string"!=typeof t)throw new NotationError(t);this[at]=t,this[ct]=Parser.parse(this.notation),this.roll()}}get averageTotal(){return(this.maxTotal+this.minTotal)/2}get maxTotal(){if(!this.hasExpressions())return 0;if(!this[lt]){const t=this[ht](h.max);this[lt]=mt(t)}return this[lt]}get minTotal(){if(!this.hasExpressions())return 0;if(!this[ut]){const t=this[ht](h.min);this[ut]=mt(t)}return this[ut]}get notation(){return this[at]}get output(){let t=`${this.notation}: `;return this.hasRolls()?t+=`${this[pt]} = ${this.total}`:t+="No dice rolled",t}get rolls(){return this[pt]?this[pt].results:[]}get total(){return!this[dt]&&this.hasRolls()&&(this[dt]=mt(this[pt])),this[dt]||0}export(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:st.JSON;switch(t){case st.BASE_64:return btoa(this.export(st.JSON));case st.JSON:return JSON.stringify(this);case st.OBJECT:return JSON.parse(this.export(st.JSON));default:throw new TypeError(`Invalid export format "${t}"`)}}hasExpressions(){return this[ct]&&this[ct].length>0}hasRolls(){return this.hasExpressions()&&this.rolls.length>0}roll(){return this[dt]=0,this[pt]=this[ht](),this.rolls}toJSON(){const{averageTotal:t,maxTotal:e,minTotal:r,notation:o,output:i,rolls:n,total:s}=this;return{averageTotal:t,maxTotal:e,minTotal:r,notation:o,output:i,rolls:n,total:s,type:"dice-roll"}}toString(){return this.output}static import(t){if(t){if(tt(t))return DiceRoll.import(JSON.parse(t));if(Z(t))return DiceRoll.import(atob(t));if("object"==typeof t)return new DiceRoll(t);throw new DataFormatError(t)}throw new RequiredArgumentError("data")}[ht](t){let e;t&&(e=p.engine,p.engine=t);const r=new ResultGroup(this[ct].map((t=>t instanceof StandardDice||t instanceof RollGroup?t.roll():t)).filter((t=>!!t||0===t)));return t&&(p.engine=e),r}[ft](t){if(t instanceof ResultGroup)this[pt]=t;else if(t instanceof RollResults)this[pt]=new ResultGroup([t]);else{if(!Array.isArray(t))throw new TypeError("Rolls must be a valid result object, or an array");this[pt]=new ResultGroup(t.map((t=>{if(t instanceof ResultGroup||t instanceof RollResults)return t;if(Array.isArray(t))return new RollResults(t);if("object"==typeof t){if(Array.isArray(t.results))return new ResultGroup(t.results,t.modifiers||[],t.isRollGroup||!1,"boolean"!=typeof t.useInTotal||t.useInTotal);if(Array.isArray(t.rolls))return new RollResults(t.rolls)}return t})))}}}const gt=Symbol("log");class DiceRoller{constructor(t){this[gt]=[],t&&this.import(t)}get log(){return this[gt]||[]}get output(){return this.log.join("; ")}get total(){return this.log.reduce(((t,e)=>t+e.total),0)}clearLog(){this[gt].length=0}export(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:st.JSON;switch(t){case st.BASE_64:return btoa(this.export(st.JSON));case st.JSON:return JSON.stringify(this);case st.OBJECT:return JSON.parse(this.export(st.JSON));default:throw new TypeError(`Invalid export format "${t}"`)}}import(t){if(t){if(tt(t))return this.import(JSON.parse(t));if(Z(t))return this.import(atob(t));if("object"==typeof t){let e=t.log||null;if(!t.log&&Array.isArray(t)&&t.length&&(e=t),e&&Array.isArray(e))e.forEach((t=>{this[gt].push(DiceRoll.import(t))}));else if(e)throw new TypeError("log must be an array");return this.log}throw new DataFormatError(t)}throw new RequiredArgumentError("data")}roll(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const o=e.filter(Boolean);if(0===o.length)throw new RequiredArgumentError("notations");const i=o.map((t=>{const e=new DiceRoll(t);return this[gt].push(e),e}));return i.length>1?i:i[0]}toJSON(){const{log:t,output:e,total:r}=this;return{log:t,output:e,total:r,type:"dice-roller"}}toString(){return this.output}static import(t){const e=new DiceRoller;return e.import(t),e}}t.ComparePoint=ComparePoint,t.Dice=G,t.DiceRoll=DiceRoll,t.DiceRoller=DiceRoller,t.Exceptions=o,t.Modifiers=W,t.NumberGenerator=f,t.Parser=Parser,t.Results=Y,t.RollGroup=RollGroup,t.exportFormats=st,Object.defineProperty(t,"__esModule",{value:!0})}));
